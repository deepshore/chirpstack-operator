apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "applications.deepshore.de/v1alpha1",
          "kind": "Chirpstack",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "chirpstack-operator",
              "app.kubernetes.io/instance": "test",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "chirpstack",
              "app.kubernetes.io/part-of": "chirpstack-operator"
            },
            "name": "test"
          },
          "spec": {
            "restApi": {
              "enabled": true
            },
            "server": {
              "configuration": {
                "chirpstack": {
                  "integration": {
                    "enabled": [
                      "mqtt"
                    ],
                    "mqtt": {
                      "clientId": {
                        "customId": "test",
                        "mode": "custom"
                      },
                      "eventTopic": "{% raw %}application/{{application_id}}/device/{{dev_eui}}/event/{{event}}{% endraw %}",
                      "json": true,
                      "qos": 1,
                      "server": {
                        "hostname": "mosquitto",
                        "port": 1883,
                        "scheme": "tcp"
                      }
                    }
                  },
                  "logging": {
                    "level": "debug"
                  },
                  "monitoring": {
                    "enabled": true
                  },
                  "network": {
                    "enabledRegions": [
                      "eu868"
                    ],
                    "netId": "000000"
                  },
                  "postgresql": {
                    "dbOperations": {
                      "enabled": true,
                      "postgresPassword": {
                        "key": "password",
                        "secret": "postgres-password"
                      }
                    },
                    "dsn": {
                      "database": "chirpstack",
                      "hostname": "postgres",
                      "password": {
                        "key": "password",
                        "secret": "postgres"
                      },
                      "sslMode": "disable",
                      "username": {
                        "key": "username",
                        "secret": "postgres"
                      }
                    },
                    "maxOpenConnections": 1,
                    "minIdleConnections": 0
                  },
                  "redis": {
                    "cluster": false,
                    "keyPrefix": "",
                    "maxOpenConnections": 10,
                    "minIdleConnections": 0,
                    "servers": [
                      "redis:6379"
                    ],
                    "tlsEnabled": false
                  }
                },
                "regions": {
                  "eu868": {
                    "gateway": {
                      "backend": {
                        "mqtt": {
                          "cleanSession": false,
                          "clientId": {
                            "mode": "podname"
                          },
                          "qos": 1,
                          "server": {
                            "hostname": "mosquitto",
                            "port": 1883,
                            "scheme": "tcp"
                          }
                        }
                      },
                      "forceGwsPrivate": false
                    }
                  }
                }
              },
              "service": {
                "port": 8080
              },
              "workload": {
                "extraEnvVars": [
                  {
                    "name": "TEST_NAME",
                    "value": "testvalue"
                  }
                ],
                "image": {
                  "registry": "docker.io",
                  "repository": "chirpstack/chirpstack",
                  "tag": "4"
                },
                "podAnnotations": [
                  {
                    "key": "my-annotation-key",
                    "value": "my-annotation-value"
                  }
                ],
                "podLabels": [
                  {
                    "key": "my-label-key",
                    "value": "my-label-value"
                  }
                ],
                "replicas": 3,
                "type": "statefulset"
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2024-11-14T11:03:05Z"
    operators.operatorframework.io/builder: operator-sdk-v1.37.0
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
  name: chirpstack-operator.v0.0.8
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Chirpstack
      name: chirpstacks.applications.deepshore.de
      version: v1alpha1
  description: Operator for Chirpstack
  displayName: chirpstack-operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          - pods
          - pods/exec
          - pods/log
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - applications.deepshore.de
          resources:
          - chirpstacks
          - chirpstacks/status
          - chirpstacks/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - applications.deepshore.de
          resources:
          - chirpstackregions
          - chirpstackregions/status
          - chirpstackregions/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: chirpstack-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: chirpstack-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: chirpstack-operator
          control-plane: controller-manager
        name: chirpstack-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:6789
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=chirpstack-operator
                env:
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: controller:latest
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 6789
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 6789
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  requests:
                    cpu: 500m
                    memory: 4Gi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: chirpstack-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: chirpstack-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - iot
  - chirpstack
  - lorawan
  - operations
  links:
  - name: Chirpstack Operator
    url: https://chirpstack-operator.domain
  maintainers:
  - email: malte.groth@deepshore.de
    name: Malte Groth
  maturity: alpha
  provider:
    name: Deepshore GmbH
    url: https://deepshore.de/
  version: 0.0.8
