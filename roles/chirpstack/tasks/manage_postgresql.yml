- debug:
    msg: Manage PostgreSQL

- name: Operator Managed PostgreSQL
  block:
  - name: Check connection to PostgreSQL
    community.postgresql.postgresql_ping:
      db: postgres
      login_host: "{{ server.configuration.chirpstack.postgresql.dsn.hostname }}.{{ ansible_operator_meta.namespace }}.svc.cluster.local"
      login_user: postgres
      login_password: "{{ chirpstack_postgresql_db_operations_postgres_password | b64decode }}"
      ssl_mode: "{{ server.configuration.chirpstack.postgresql.dsn.ssl_mode }}"
    register: results_postgresql_ping

  - debug:
      var: results_postgresql_ping
  
  - name: Ensure DB is present 
    community.postgresql.postgresql_db:
      db: "{{ server.configuration.chirpstack.postgresql.dsn.database }}"
      login_host: "{{ server.configuration.chirpstack.postgresql.dsn.hostname }}.{{ ansible_operator_meta.namespace }}.svc.cluster.local"
      login_user: postgres
      login_password: "{{ chirpstack_postgresql_db_operations_postgres_password | b64decode }}"
      ssl_mode: "{{ server.configuration.chirpstack.postgresql.dsn.ssl_mode }}"
    register: results_db_present

  - debug:
      var: results_db_present

  when: server.configuration.chirpstack.postgresql.db_operations.enabled

- name: Provided PostgreSQL 
  block: 
  - name: Check connection to PostgreSQL
    community.postgresql.postgresql_ping:
      db: "{{ server.configuration.chirpstack.postgresql.dsn.database }}"
      login_host: "{{ server.configuration.chirpstack.postgresql.dsn.hostname }}.{{ ansible_operator_meta.namespace }}.svc.cluster.local"
      login_user: "{{ chirpstack_postgresql_dsn_username | b64decode }}"
      login_password: "{{ chirpstack_postgresql_dsn_username | b64decode }}"
      ssl_mode: "{{ server.configuration.chirpstack.postgresql.dsn.ssl_mode }}"
    register: results_postgresql_ping

  - debug:
      var: results_postgresql_ping

  when: not server.configuration.chirpstack.postgresql.db_operations.enabled
