- block:
  - debug:
      msg: "Secret {{ item.secret }} for variable {{ item.var }} for set"

  - name: "Get {{ item.key }} from {{ item.secret }}"
    kubernetes.core.k8s_info:
      api_version: v1
      kind: Secret
      name: "{{ item.secret }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
    register: tmp_secret

  - block:
    - operator_sdk.util.k8s_status:
        api_version: applications.deepshore.de/v1alpha1
        kind: Chirpstack
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          secrets: 
            status: "Error"
            message: "Secret '{{ item.secret }}' not found"

    - fail:
        msg: "Secret '{{ item.secret }}'' not found"

    when: not tmp_secret.resources

  - block:
    - operator_sdk.util.k8s_status:
        api_version: applications.deepshore.de/v1alpha1
        kind: Chirpstack
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          secrets: 
            status: "Error"
            message: "Secret '{{ item.secret }}' exists but does not contain key '{{ item.key }}'"

    - fail:
        msg: "Secret '{{ item.secret }}' exists but does not contain key '{{ item.key }}'"

    when:
    - tmp_secret.resources
    - tmp_secret.resources[0].data[item.key] is not defined

  - name: "Set {{ item.var }} to value from Secret"
    set_fact:
      "{{ item.var }}": "{{ tmp_secret.resources[0].data[item.key] }}"
      
  when: item.secret

- block:
  - debug:
      msg: "Secret for variable {{ item.var }} was not set"

  - name: "Set {{ item.var }} to empty string"
    set_fact:
      "{{ item.var }}": ""

  when: not item.secret
