apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "chirpstack-{{ ansible_operator_meta.name }}"
  name: "chirpstack-{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
spec:
  selector:
    matchLabels:
      app: "chirpstack-{{ ansible_operator_meta.name }}"
  serviceName: "chirpstack-{{ ansible_operator_meta.name }}"
  replicas: {{ server.workload.replicas }}
  template:
    metadata:
      labels:
        app: "chirpstack-{{ ansible_operator_meta.name }}"
{% if server.workload.pod_labels is defined and server.workload.pod_labels|length > 0 %}
{% for label in server.workload.pod_labels %}
        "{{ label.key }}": "{{ label.value }}"
{% endfor %}
{% endif %}
      annotations:
{% if server.workload.pod_annotations is defined and server.workload.pod_annotations|length > 0 %}
{% for annotation in server.workload.pod_annotations %}
        "{{ annotation.key }}": "{{ annotation.value }}"
{% endfor %}
{% endif %}
    spec:
      containers:
      - name: chirpstack
        image: {{ server.workload.image.registry }}/{{ server.workload.image.repository }}:{{ server.workload.image.tag }}
        # command: ["/bin/sh", "-ec", "sleep infinity"]
        args:
        - "-c"
        - "/etc/chirpstack"
        env:
        - name: CHIRPSTACK_SERVER_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{% for env in server.workload.extra_env_vars %}
        - name: {{ env.name }}
          value: {{ env.value }}
{% endfor %}
        envFrom:
{% for user_env_secret in server.configuration.env_secrets %}
        - secretRef:
            name: {{ user_env_secret }}
{% endfor %}
        ports:
        - containerPort: 8080
          name: web
        volumeMounts:
        - name: configuration-chirpstack
          mountPath: /etc/chirpstack
          readOnly: true
{% for cert in server.configuration.certificates %}
        - name: {{ cert.name }}
          mountPath: /certs/{{ cert.name }}
          readOnly: true
{% endfor %}
{% if "adrPluginFiles" in server.configuration %}
        - name: adr-plugins
          mountPath: /adr-plugins
          readOnly: true
{% endif %}
      volumes:
      - name: configuration-chirpstack
        configMap:
          name: {{ server.configuration.config_files.config_map_name }}
{% for cert in server.configuration.certificates %}
      - name: {{ cert.name }}
        secret:
          secretName: {{ cert.secret_name }}
{% endfor %}
{% if "adrPluginFiles" in server.configuration %}
      - name: adr-plugins
        configMap:
          name: {{ server.configuration.adr_plugin_files.config_map_name }}
{% endif %}
