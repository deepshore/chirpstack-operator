---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: chirpstacks.applications.deepshore.de
spec:
  group: applications.deepshore.de
  names:
    kind: Chirpstack
    listKind: ChirpstackList
    plural: chirpstacks
    singular: chirpstack
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Chirpstack is the Schema for the chirpstacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Chirpstack
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              server:
                type: object
                default: {}
                properties:
                  workload:
                    type: object
                    properties:
                      type:
                        type: string
                        default: deployment
                        enum: ["deployment","statefulset"]
                      image:
                        type: object
                        default: {}
                        properties:
                          registry:
                            type: string
                            default: "docker.io"
                          repository:
                            type: string
                            default: "chirpstack/chirpstack"
                          tag:
                            type: string
                            default: "4"
                      replicas:
                        type: integer
                        default: 1
                        minimum: 1
                      podAnnotations:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                      podLabels:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                      extraEnvVars:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                  service:
                    type: object
                    default: {}
                    properties:
                      type:
                        type: string
                        enum: ["ClusterIP","NodePort"]
                        default: "ClusterIP"
                      port:
                        type: integer
                        default: 8080
                      nodePort:
                        type: integer
                  configuration:
                    type: object
                    properties:
                      configFiles:
                        type: object
                        properties:
                          configMapName:
                            type: string
                        required:
                          - configMapName
                      envSecrets:
                        type: array
                        default: []
                        items:
                          type: string
                      adrPluginFiles:
                        type: object
                        properties:
                          configMapName:
                            type: string
                      certificates:
                        type: array
                        default: []
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            secretName:
                              type: string
                          required:
                            - name
                            - secretName
                      monitoring:
                        type: object
                        properties:
                          port:
                            type: string
                          targetPort:
                            type: string
                        required:
                          - port
                          - targetPort
                    required:
                      - configFiles
              restApi:
                type: object
                default: {}
                properties:
                  enabled:
                    type: boolean
                    default: true
                  workload:
                    type: object
                    default: {}
                    properties:
                      image:
                        type: object
                        default: {}
                        properties:
                          registry:
                            type: string
                            default: "docker.io"
                          repository:
                            type: string
                            default: "chirpstack/chirpstack-rest-api"
                          tag:
                            type: string
                            default: "4"
                      replicas:
                        type: integer
                        default: 1
                        minimum: 1
                  service:
                    type: object
                    default: {}
                    properties:
                      type:
                        type: string
                        enum: ["ClusterIP","NodePort"]
                        default: "ClusterIP"
                      port:
                        type: integer
                        default: 8080
                      nodePort:
                        type: integer
                  configuration:
                    type: object
                    default: {}
                    properties:
                      insecure:
                        type: boolean
                        default: true
          status:
            description: Status defines the observed state of Chirpstack
            type: object
            x-kubernetes-preserve-unknown-fields: true
            properties:
              previousState:
                type: object
                default: {}
                properties:
                  configmaps:
                    type: object
                    additionalProperties: true
                  secrets:
                    type: object
                    additionalProperties: true
                  certificates:
                    type: object
                    additionalProperties: true
              reconciliation:
                type: object
                properties:
                  checking:
                    type: object
                    properties:
                      status:
                        type: string
                        enum: ["Processing","Error","Done"]
                      message:
                        type: string
                        default: ""
                  reconciling:
                    type: object
                    properties:
                      status:
                        type: string
                        enum: ["Pending","Notified","Processing","Error","Done"]
                      message:
                        type: string
                        default: ""
        type: object
    served: true
    storage: true
    subresources:
      status: {}
