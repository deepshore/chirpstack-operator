apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: chirpstacks.applications.deepshore.de
spec:
  group: applications.deepshore.de
  names:
    categories: []
    kind: Chirpstack
    plural: chirpstacks
    shortNames: []
    singular: chirpstack
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for Spec via `CustomResource`
          properties:
            spec:
              properties:
                restApi:
                  properties:
                    configuration:
                      default:
                        insecure: false
                      properties:
                        insecure:
                          default: true
                          type: boolean
                      type: object
                    enabled:
                      type: boolean
                    service:
                      default:
                        port: 8080
                        type: ClusterIP
                      properties:
                        nodePort:
                          format: int32
                          nullable: true
                          type: integer
                        port:
                          default: 8080
                          format: int32
                          type: integer
                        type:
                          default: ClusterIP
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                    workload:
                      default:
                        image:
                          registry: docker.io
                          repository: chirpstack/chirpstack-rest-api
                          tag: "4"
                        replicas: 1
                      properties:
                        image:
                          properties:
                            registry:
                              type: string
                            repository:
                              type: string
                            tag:
                              type: string
                          required:
                            - registry
                            - repository
                            - tag
                          type: object
                        replicas:
                          format: int32
                          type: integer
                      required:
                        - image
                        - replicas
                      type: object
                  required:
                    - enabled
                  type: object
                server:
                  properties:
                    configuration:
                      properties:
                        adrPluginFiles:
                          nullable: true
                          properties:
                            configMapName:
                              type: string
                          required:
                            - configMapName
                          type: object
                        certificates:
                          default: []
                          items:
                            properties:
                              name:
                                type: string
                              secretName:
                                type: string
                            required:
                              - name
                              - secretName
                            type: object
                          type: array
                        configFiles:
                          properties:
                            configMapName:
                              type: string
                          required:
                            - configMapName
                          type: object
                        env:
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                      - name
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                      - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        type: string
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                      - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                      - name
                                    type: object
                                type: object
                            required:
                              - name
                            type: object
                          nullable: true
                          type: array
                        envFrom:
                          items:
                            description: EnvFromSource represents the source of a set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                                required:
                                  - name
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                                required:
                                  - name
                                type: object
                            type: object
                          nullable: true
                          type: array
                        monitoring:
                          nullable: true
                          properties:
                            port:
                              format: int32
                              type: integer
                            targetPort:
                              description: IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
                              x-kubernetes-int-or-string: true
                          required:
                            - port
                            - targetPort
                          type: object
                      required:
                        - configFiles
                      type: object
                    service:
                      properties:
                        nodePort:
                          format: int32
                          nullable: true
                          type: integer
                        port:
                          default: 8080
                          format: int32
                          type: integer
                        type:
                          default: ClusterIP
                          enum:
                            - ClusterIP
                            - NodePort
                          type: string
                      type: object
                    workload:
                      properties:
                        extraEnvVars:
                          default: []
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                      - name
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    required:
                                      - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        type: string
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                      - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                      - name
                                    type: object
                                type: object
                            required:
                              - name
                            type: object
                          type: array
                        image:
                          default:
                            registry: docker.io
                            repository: chirpstack/chirpstack
                            tag: "4"
                          properties:
                            registry:
                              type: string
                            repository:
                              type: string
                            tag:
                              type: string
                          required:
                            - registry
                            - repository
                            - tag
                          type: object
                        podAnnotations:
                          default: []
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          type: array
                        podLabels:
                          default: []
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          type: array
                        replicas:
                          format: int32
                          type: integer
                        type:
                          enum:
                            - deployment
                            - statefulset
                          type: string
                      required:
                        - replicas
                        - type
                      type: object
                  required:
                    - configuration
                    - service
                    - workload
                  type: object
              required:
                - restApi
                - server
              type: object
            status:
              nullable: true
              properties:
                bookkeeping:
                  properties:
                    lastObservedConfigHash:
                      nullable: true
                      type: string
                    lastObservedGeneration:
                      format: int64
                      nullable: true
                      type: integer
                    lastObservedWorkloadType:
                      enum:
                        - deployment
                        - statefulset
                      nullable: true
                      type: string
                    lastReconciliationAttempt:
                      default:
                        nanos_since_epoch: 0
                        secs_since_epoch: 0
                      properties:
                        nanos_since_epoch:
                          format: uint32
                          minimum: 0.0
                          type: integer
                        secs_since_epoch:
                          format: uint64
                          minimum: 0.0
                          type: integer
                      required:
                        - nanos_since_epoch
                        - secs_since_epoch
                      type: object
                  type: object
                errors:
                  items:
                    type: string
                  type: array
                state:
                  enum:
                    - Processing
                    - Error
                    - Done
                  type: string
              required:
                - bookkeeping
                - errors
                - state
              type: object
          required:
            - spec
          title: Chirpstack
          type: object
      served: true
      storage: true
      subresources:
        status: {}
