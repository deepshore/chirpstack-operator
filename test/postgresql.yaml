apiVersion: v1
data:
  001-init-chirpstack.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" <<-EOSQL
        create role chirpstack with login password 'chirpstack';
        create database chirpstack with owner chirpstack;
    EOSQL
  002-chirpstack_extensions.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname="chirpstack" <<-EOSQL
        create extension pg_trgm;
        create extension hstore;
    EOSQL
kind: ConfigMap
metadata:
  name: postgres-initdb
---
apiVersion: v1
data:
  password: Y2hpcnBzdGFjaw==
  username: Y2hpcnBzdGFjaw==
kind: Secret
metadata:
  name: postgres
type: Opaque
---
apiVersion: v1
data:
  password: cm9vdA==
kind: Secret
metadata:
  name: postgres-password
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: root
        image: postgres:14-alpine
        name: postgres
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: data
        - mountPath: /docker-entrypoint-initdb.d
          name: initdb
      volumes:
      - configMap:
          name: postgres-initdb
        name: initdb
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 500Mi
      storageClassName: standard
